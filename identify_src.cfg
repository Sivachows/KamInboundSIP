route[identify_src]{

    $avp(called_number)=$rU;
    $avp(caller_id)=$fU;
    $avp(src_ip)=$si;

    //check if inbound call
    redis_cmd("redis","HMGET phoneNumber:$avp(called_number) customerId carrierId countryId billType channels rtpProxied routStrat","r");
    if($redis(r=>value[2])!=0){
        $avp(customerId)=$redis(r=>value[0]);
        $avp(carrierId)=$redis(r=>value[1]);       
        $avp(countryId)=$redis(r=>value[2]);
        $avp(billType)=$redis(r=>value[3]);        
        $avp(did_channels)=$redis(r=>value[4]);
        $avp(rtpProxied)=$redis(r=>value[5]);
        if($(avp(rtpProxied){s.int})==1){
            xlog("L_INFO","Setting rtpEngine for inbound call");
            $sht(rtpProxy=>mip_$ci)=1;
        }
        $avp(routStrat)=$redis(r=>value[6]);
        $var(access_key)="carrierIPAddrs:"+$avp(carrierId);
        $avp(direction)="Inbound";
        //validate src for carrier ip
        route(validate_carrier_ip);
        if(isflagset(SIP_IP_OK)){
            xlog("L_INFO","Source is Authorised Carrier $si");
            if($avp(routStrat))!=0{
                route(src_carrier);
            }else{
                $avp(sip_code)="404";
                $avp(sip_reason)="Not Routed";
                route(SET_CDR);
                acc_db_request("Not Routed", "failed_sessions");
                sl_send_reply("404","Not Routed");
                exit;
            }
			exit;		
		}
    }   

    xlog("L_INFO","UNAUTHORIZED ACCESS FROM $si : $ua");
    sl_send_reply("403", "UNAUTHORIZED IP Address");
    exit;

}

route[validate_carrier_ip]{

    xlog("L_INFO","ip_access key : $var(access_key)");
    redis_cmd("redis","SMEMBERS carrierIPAddrs:$avp(carrierId)","r");
    $var(count)=$redis(r=>size);
    $var(iterate)=0;
    while ($(var(count){s.int})>=$null && $var(count)!=""){
        $avp((ip_access)[$var(iterate)])=$redis(r=>value[$var(iterate)]);
        xlog("L_INFO","ip_access:[$var(iterate)] :  $avp((ip_access)[$var(iterate)])");
        if (is_in_subnet("$si", "$avp((ip_access)[$var(iterate)])")) {
            xlog("L_INFO", "$var(count) is in the subnet $var(count) $var(iterate)\n");
            setflag(SIP_IP_OK);
        }
        $var(count)=$var(count)-1;
        $var(iterate)=$var(iterate)+1;
    }

}
